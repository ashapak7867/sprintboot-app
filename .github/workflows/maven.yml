# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest
   
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
        
    - name: Cache local Maven repository
      uses: actions/cache@v3
      env:
         cache-name: cache-mvn
      with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

    - name: Checkout
      uses: actions/checkout@v2
      with:
         repository: ashapak7867/java-spring-app
         ref: main
         path: ojdbc8-19.3.0.0.jar /sprintboot-app
    - name: Build with Maven
      run: mvn clean install ojdbc8-193.0.0 :run -B package --file pom.xml 
    - name: create folder
      run: mkdir save && cp /home/runner/work/sprintboot-app/sprintboot-app/target/test-0.0.1-SNAPSHOT-boot.war save
    - name: upload artifiacts
      uses: actions/upload-artifact@v3
      with:
       name: my-artifact
       path: save
      
