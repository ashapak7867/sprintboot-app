# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest
   
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
        
   # - name: working dir
    #  run: ls
    - name: Checkout job
      run: |
            git ls-files --sub-branch -i --exclude-standard
            git checkout main sub-branch ojdbc8.19.3.0.0.jar
            #git fetch
            #git checkout -b sub-branch 
    #  uses: actions/checkout@v2
       #with:
       #  repository: ashapak7867/java-spring-app
        # ref: main
         #path: ./java-spring-app
         #run: ls
         
    - name: add subtree 
      run: |
            eval "$(ssh-agent -s)"
            ssh-keygen -t rsa -b 4096 -C "my@ashapak7867.com" -f /home/runner/work/to/key.pub
            ssh-add -l -E sha256
            2048 SHA256:274ffWxgaxq/tSINAykStUL7XWyRNcRTlcST1Ei7gBQ /java-spring-app/ashapak7867/.ssh/id_rsa (RSA)
            #ssh-add ~/.ssh/id_rsa
            #git remote add origin git@github.com:ashapak7867/sprintboot-app.git
            git remote set-url origin git@github.com:ashapak7867/java-spring-app.git
            git push -u origin main
        
        
    - name: Build with Maven
      run:  mvn -B package --file pom.xml  
    - name: create folder
      run: mkdir save && cp /home/runner/work/sprintboot-app/sprintboot-app/target/test-0.0.1-SNAPSHOT-boot.war save
    - name: upload artifiacts
      uses: actions/upload-artifact@v3
      with:
       name: my-artifact
       path: save
      
